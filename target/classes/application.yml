server:
  port: 8082

spring:
  application:
    name: pick-execution-service

  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/pick_execution}
      database: pick_execution

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: pick-execution-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

  # Spring MVC Configuration
  mvc:
    contentnegotiation:
      favor-parameter: false
      favor-path-extension: false
      media-types:
        json: application/json

# Logging Configuration
logging:
  level:
    root: INFO
    com.paklog.wes.pick: DEBUG
    org.springframework.kafka: WARN
    org.mongodb.driver: WARN

# Application-specific Configuration
pick:
  path-optimization:
    enabled: true
    algorithm: TWO_OPT
  put-wall:
    enabled: true
    slots-per-wall: 32
  strategy:
    default: BATCH

# CloudEvents Configuration
cloudevents:
  kafka:
    topic: warehouse-execution.pick-execution.events
    source: /wes/pick-execution-service

# PakLog Configuration
paklog:
  kafka:
    topics:
      task-events: warehouse-execution.task-execution.events
      pick-events: warehouse-execution.pick-execution.events
    consumer:
      group-id: pick-execution-service

# Actuator Endpoints
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus
  endpoint:
    health:
      show-details: when-authorized
  health:
    mongo:
      enabled: true
    kafka:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: dev
      service-type: wes
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces

# OpenAPI Documentation Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
